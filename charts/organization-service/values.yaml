# Default values for organization-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  exec:
    command:
      - /bin/sh
      - -c
      - curl -f -s localhost:8080/actuator/health/liveness | grep '{"status":"UP"}' || exit
  failureThreshold: 5
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
readinessProbe:
  exec:
    command:
      - /bin/sh
      - -c
      - curl -f -s localhost:8080/actuator/health/readiness | grep '{"status":"UP"}' || exit
  failureThreshold: 5
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

volumes:
  - name: organization-service
    secret:
      secretName: organization-service
volumeMounts:
  - name: organization-service
    mountPath: /run/secrets/jwt/issuer-uri
    readOnly: true
    subPath: jwt-issuer-uri
  - name: organization-service
    mountPath: /run/secrets/datasource/url
    readOnly: true
    subPath: datasource-url
  - name: organization-service
    mountPath: /run/secrets/datasource/username
    readOnly: true
    subPath: datasource-username
  - name: organization-service
    mountPath: /run/secrets/datasource/password
    readOnly: true
    subPath: datasource-password

nodeSelector: {}

tolerations: []

affinity: {}

env:
  - name: SPRING_PROFILES_ACTIVE
    value: dev
  - name: SPRING_CLOUD_CONFIG_URI
    value: http://config-service:8080
  - name: EUREKA_CLIENT_AVAILABILITYZONES_DEFAULT
    value: default
  - name: EUREKA_CLIENT_SERVICEURL_DEFAULT
    value: http://eureka-service:8080/eureka
  - name: JWT_ISSUER_URI_FILE
    value: /run/secrets/jwt/issuer-uri
  - name: DATASOURCE_URL_FILE
    value: /run/secrets/datasource/url
  - name: DATASOURCE_USERNAME_FILE
    value: /run/secrets/datasource/username
  - name: DATASOURCE_PASSWORD_FILE
    value: /run/secrets/datasource/password
